//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by xsd, Version=2.0.50727.3038.
//
namespace CannedBytes.Midi.SpeechController.Serialization.Version10
{
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.cannedbytes.com/CannedBytes.Midi.SpeechController/FileSchema/10")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://schemas.cannedbytes.com/CannedBytes.Midi.SpeechController/FileSchema/10", IsNullable = false)]
    public partial class File
    {
        private Properties propertiesField;

        private Document documentField;

        /// <remarks/>
        public Properties Properties
        {
            get
            {
                return this.propertiesField;
            }
            set
            {
                this.propertiesField = value;
            }
        }

        /// <remarks/>
        public Document Document
        {
            get
            {
                return this.documentField;
            }
            set
            {
                this.documentField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.cannedbytes.com/CannedBytes.Midi.SpeechController/FileSchema/10")]
    public partial class Properties
    {
        private string fileVersionField;

        /// <remarks/>
        public string FileVersion
        {
            get
            {
                return this.fileVersionField;
            }
            set
            {
                this.fileVersionField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.cannedbytes.com/CannedBytes.Midi.SpeechController/MidiSchema/10")]
    public partial class MidiPort
    {
        private int idField;

        private string nameField;

        /// <remarks/>
        public int Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.cannedbytes.com/CannedBytes.Midi.SpeechController/DocumentSchema/10")]
    public partial class MidiCommand
    {
        private MidiPort portField;

        private int channelField;

        private MidiCommandTypes commandTypeField;

        private MidiControllerTypes controllerTypeField;

        private bool controllerTypeFieldSpecified;

        private int controllerValueField;

        private bool controllerValueFieldSpecified;

        private int programValueField;

        private bool programValueFieldSpecified;

        /// <remarks/>
        public MidiPort Port
        {
            get
            {
                return this.portField;
            }
            set
            {
                this.portField = value;
            }
        }

        /// <remarks/>
        public int Channel
        {
            get
            {
                return this.channelField;
            }
            set
            {
                this.channelField = value;
            }
        }

        /// <remarks/>
        public MidiCommandTypes CommandType
        {
            get
            {
                return this.commandTypeField;
            }
            set
            {
                this.commandTypeField = value;
            }
        }

        /// <remarks/>
        public MidiControllerTypes ControllerType
        {
            get
            {
                return this.controllerTypeField;
            }
            set
            {
                this.controllerTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ControllerTypeSpecified
        {
            get
            {
                return this.controllerTypeFieldSpecified;
            }
            set
            {
                this.controllerTypeFieldSpecified = value;
            }
        }

        /// <remarks/>
        public int ControllerValue
        {
            get
            {
                return this.controllerValueField;
            }
            set
            {
                this.controllerValueField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ControllerValueSpecified
        {
            get
            {
                return this.controllerValueFieldSpecified;
            }
            set
            {
                this.controllerValueFieldSpecified = value;
            }
        }

        /// <remarks/>
        public int ProgramValue
        {
            get
            {
                return this.programValueField;
            }
            set
            {
                this.programValueField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProgramValueSpecified
        {
            get
            {
                return this.programValueFieldSpecified;
            }
            set
            {
                this.programValueFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.cannedbytes.com/CannedBytes.Midi.SpeechController/DocumentSchema/10")]
    public enum MidiCommandTypes
    {
        /// <remarks/>
        ProgramChange,

        /// <remarks/>
        ControlChange,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.cannedbytes.com/CannedBytes.Midi.SpeechController/MidiSchema/10")]
    public enum MidiControllerTypes
    {
        /// <remarks/>
        BankSelect,

        /// <remarks/>
        ModulationWheel,

        /// <remarks/>
        BreathControl,

        /// <remarks/>
        FootPedal,

        /// <remarks/>
        PortamentoTime,

        /// <remarks/>
        DataEntrySlider,

        /// <remarks/>
        Volume,

        /// <remarks/>
        Balance,

        /// <remarks/>
        Pan,

        /// <remarks/>
        Expression,

        /// <remarks/>
        EffectControl1,

        /// <remarks/>
        EffectControl2,

        /// <remarks/>
        GeneralPurposeSlider1,

        /// <remarks/>
        GeneralPurposeSlider2,

        /// <remarks/>
        GeneralPurposeSlider3,

        /// <remarks/>
        GeneralPurposeSlider4,

        /// <remarks/>
        BankSelectFine,

        /// <remarks/>
        ModulationWheelFine,

        /// <remarks/>
        BreathControlFine,

        /// <remarks/>
        FootPedalFine,

        /// <remarks/>
        PortamentoTimeFine,

        /// <remarks/>
        DataEntrySliderFine,

        /// <remarks/>
        VolumeFine,

        /// <remarks/>
        BalanceFine,

        /// <remarks/>
        PanFine,

        /// <remarks/>
        ExpressionFine,

        /// <remarks/>
        EffectControl1Fine,

        /// <remarks/>
        EffectControl2Fine,

        /// <remarks/>
        HoldPedal,

        /// <remarks/>
        Portamento,

        /// <remarks/>
        SustenutoPedal,

        /// <remarks/>
        SoftPedal,

        /// <remarks/>
        LegatoPedal,

        /// <remarks/>
        HoldPedal2,

        /// <remarks/>
        SoundVariation,

        /// <remarks/>
        SoundTimbre,

        /// <remarks/>
        SoundReleaseTime,

        /// <remarks/>
        SoundAttackTime,

        /// <remarks/>
        SoundBrightness,

        /// <remarks/>
        SoundControl6,

        /// <remarks/>
        SoundControl7,

        /// <remarks/>
        SoundControl8,

        /// <remarks/>
        SoundControl9,

        /// <remarks/>
        SoundControl10,

        /// <remarks/>
        GeneralPurposeButton1,

        /// <remarks/>
        GeneralPurposeButton2,

        /// <remarks/>
        GeneralPurposeButton3,

        /// <remarks/>
        GeneralPurposeButton4,

        /// <remarks/>
        EffectsLevel,

        /// <remarks/>
        TremeloLevel,

        /// <remarks/>
        ChorusLevel,

        /// <remarks/>
        CelesteLevel,

        /// <remarks/>
        PhaserLevel,

        /// <remarks/>
        DataButtonIncrement,

        /// <remarks/>
        DataButtonDecrement,

        /// <remarks/>
        NonRegisteredParameterFine,

        /// <remarks/>
        NonRegisteredParameterCoarse,

        /// <remarks/>
        RegisteredParameterFine,

        /// <remarks/>
        RegisteredParameterCoarse,

        /// <remarks/>
        AllSoundOff,

        /// <remarks/>
        AllControllersOff,

        /// <remarks/>
        LocalKeyboard,

        /// <remarks/>
        AllNotesOff,

        /// <remarks/>
        OmniModeOff,

        /// <remarks/>
        OmniModeOn,

        /// <remarks/>
        MonoOperation,

        /// <remarks/>
        PolyOperation,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.cannedbytes.com/CannedBytes.Midi.SpeechController/DocumentSchema/10")]
    public partial class Patch
    {
        private string nameField;

        private string textPhraseField;

        private MidiCommand[] midiCommandsField;

        /// <remarks/>
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        public string TextPhrase
        {
            get
            {
                return this.textPhraseField;
            }
            set
            {
                this.textPhraseField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable = false)]
        public MidiCommand[] MidiCommands
        {
            get
            {
                return this.midiCommandsField;
            }
            set
            {
                this.midiCommandsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.cannedbytes.com/CannedBytes.Midi.SpeechController/DocumentSchema/10")]
    public partial class Preset
    {
        private string nameField;

        private AudioFeedbackTypes successAudioFeedbackTypeField;

        private AudioFeedbackTypes failureAudioFeedbackTypeField;

        private Patch[] patchesField;

        /// <remarks/>
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        public AudioFeedbackTypes SuccessAudioFeedbackType
        {
            get
            {
                return this.successAudioFeedbackTypeField;
            }
            set
            {
                this.successAudioFeedbackTypeField = value;
            }
        }

        /// <remarks/>
        public AudioFeedbackTypes FailureAudioFeedbackType
        {
            get
            {
                return this.failureAudioFeedbackTypeField;
            }
            set
            {
                this.failureAudioFeedbackTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable = false)]
        public Patch[] Patches
        {
            get
            {
                return this.patchesField;
            }
            set
            {
                this.patchesField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.cannedbytes.com/CannedBytes.Midi.SpeechController/DocumentSchema/10")]
    public enum AudioFeedbackTypes
    {
        /// <remarks/>
        None,

        /// <remarks/>
        Beep,

        /// <remarks/>
        Speech,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Document1))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.cannedbytes.com/CannedBytes.Midi.SpeechController/FileSchema/10")]
    public abstract partial class Document
    {
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName = "Document", Namespace = "http://schemas.cannedbytes.com/CannedBytes.Midi.SpeechController/DocumentSchema/10")]
    public partial class Document1 : Document
    {
        private Preset[] presetsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable = false)]
        public Preset[] Presets
        {
            get
            {
                return this.presetsField;
            }
            set
            {
                this.presetsField = value;
            }
        }
    }
}