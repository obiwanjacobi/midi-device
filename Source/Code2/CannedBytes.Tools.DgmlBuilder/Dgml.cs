//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by xsd, Version=4.0.30319.18020.
// 
namespace CannedBytes.Tools.DgmlBuilder {
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/vs/2009/dgml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/vs/2009/dgml", IsNullable=false)]
    public partial class DirectedGraph {
        
        private DirectedGraphNode[] nodesField;
        
        private DirectedGraphLink[] linksField;
        
        private DirectedGraphCategory[] categoriesField;
        
        private DirectedGraphProperty[] propertiesField;
        
        private DirectedGraphName[] qualifiedNamesField;
        
        private DirectedGraphAlias[] identifierAliasesField;
        
        private DirectedGraphStyle[] stylesField;
        
        private DirectedGraphPath[] pathsField;
        
        private string titleField;
        
        private string backgroundField;
        
        private string backgroundImageField;
        
        private GraphDirectionEnum graphDirectionField;
        
        private bool graphDirectionFieldSpecified;
        
        private LayoutEnum layoutField;
        
        private bool layoutFieldSpecified;
        
        private ClrBoolean butterflyModeField;
        
        private bool butterflyModeFieldSpecified;
        
        private string neighborhoodDistanceField;
        
        private string zoomLevelField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Node", IsNullable=false)]
        public DirectedGraphNode[] Nodes {
            get {
                return nodesField;
            }
            set {
                nodesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Link", IsNullable=false)]
        public DirectedGraphLink[] Links {
            get {
                return linksField;
            }
            set {
                linksField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Category", IsNullable=false)]
        public DirectedGraphCategory[] Categories {
            get {
                return categoriesField;
            }
            set {
                categoriesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Property", IsNullable=false)]
        public DirectedGraphProperty[] Properties {
            get {
                return propertiesField;
            }
            set {
                propertiesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Name", IsNullable=false)]
        public DirectedGraphName[] QualifiedNames {
            get {
                return qualifiedNamesField;
            }
            set {
                qualifiedNamesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Alias", IsNullable=false)]
        public DirectedGraphAlias[] IdentifierAliases {
            get {
                return identifierAliasesField;
            }
            set {
                identifierAliasesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Style", IsNullable=false)]
        public DirectedGraphStyle[] Styles {
            get {
                return stylesField;
            }
            set {
                stylesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Path", IsNullable=false)]
        public DirectedGraphPath[] Paths {
            get {
                return pathsField;
            }
            set {
                pathsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Title {
            get {
                return titleField;
            }
            set {
                titleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Background {
            get {
                return backgroundField;
            }
            set {
                backgroundField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string BackgroundImage {
            get {
                return backgroundImageField;
            }
            set {
                backgroundImageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public GraphDirectionEnum GraphDirection {
            get {
                return graphDirectionField;
            }
            set {
                graphDirectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GraphDirectionSpecified {
            get {
                return graphDirectionFieldSpecified;
            }
            set {
                graphDirectionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public LayoutEnum Layout {
            get {
                return layoutField;
            }
            set {
                layoutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LayoutSpecified {
            get {
                return layoutFieldSpecified;
            }
            set {
                layoutFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean ButterflyMode {
            get {
                return butterflyModeField;
            }
            set {
                butterflyModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ButterflyModeSpecified {
            get {
                return butterflyModeFieldSpecified;
            }
            set {
                butterflyModeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string NeighborhoodDistance {
            get {
                return neighborhoodDistanceField;
            }
            set {
                neighborhoodDistanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ZoomLevel {
            get {
                return zoomLevelField;
            }
            set {
                zoomLevelField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/vs/2009/dgml")]
    public partial class DirectedGraphNode {
        
        private DirectedGraphNodeCategory[] categoryField;
        
        private string idField;
        
        private string category1Field;
        
        private string iconField;
        
        private string shapeField;
        
        private string styleField;
        
        private HorizontalAlignmentEnum horizontalAlignmentField;
        
        private bool horizontalAlignmentFieldSpecified;
        
        private VerticalAlignmentEnum verticalAlignmentField;
        
        private bool verticalAlignmentFieldSpecified;
        
        private double minWidthField;
        
        private bool minWidthFieldSpecified;
        
        private double maxWidthField;
        
        private bool maxWidthFieldSpecified;
        
        private double nodeRadiusField;
        
        private bool nodeRadiusFieldSpecified;
        
        private string descriptionField;
        
        private GroupEnum groupField;
        
        private bool groupFieldSpecified;
        
        private ClrBoolean isVerticalField;
        
        private bool isVerticalFieldSpecified;
        
        private string referenceField;
        
        private string labelField;
        
        private VisibilityEnum visibilityField;
        
        private bool visibilityFieldSpecified;
        
        private string backgroundField;
        
        private double fontSizeField;
        
        private bool fontSizeFieldSpecified;
        
        private string fontFamilyField;
        
        private FontStyleEnum fontStyleField;
        
        private bool fontStyleFieldSpecified;
        
        private FontWeightEnum fontWeightField;
        
        private bool fontWeightFieldSpecified;
        
        private string strokeField;
        
        private string strokeThicknessField;
        
        private string strokeDashArrayField;
        
        private string accessField;
        
        private string assemblyField;
        
        private string filePathField;
        
        private string functionTypeFlagsField;
        
        private ClrBoolean isAbstractField;
        
        private bool isAbstractFieldSpecified;
        
        private ClrBoolean isCodeTypeField;
        
        private bool isCodeTypeFieldSpecified;
        
        private ClrBoolean isHubField;
        
        private bool isHubFieldSpecified;
        
        private ClrBoolean isOverloadedField;
        
        private bool isOverloadedFieldSpecified;
        
        private ClrBoolean isOverridableField;
        
        private bool isOverridableFieldSpecified;
        
        private string languageField;
        
        private string locationField;
        
        private int linesOfCodeField;
        
        private bool linesOfCodeFieldSpecified;
        
        private string namespaceField;
        
        private string mustImplementField;
        
        private string typeNameField;
        
        private ClrBoolean isDocumentationField;
        
        private bool isDocumentationFieldSpecified;
        
        private string codeGenSourceNameField;
        
        private string codeGenTargetNameField;
        
        private ClrBoolean codeGenIncomingField;
        
        private bool codeGenIncomingFieldSpecified;
        
        private int codeSchemaProperty_CallSequenceNumberField;
        
        private bool codeSchemaProperty_CallSequenceNumberFieldSpecified;
        
        private ClrBoolean codeSchemaProperty_DisableEnabledErrorHandlerField;
        
        private bool codeSchemaProperty_DisableEnabledErrorHandlerFieldSpecified;
        
        private ClrBoolean codeSchemaProperty_DisableEnabledExceptionField;
        
        private bool codeSchemaProperty_DisableEnabledExceptionFieldSpecified;
        
        private int codeSchemaProperty_EndColumnField;
        
        private bool codeSchemaProperty_EndColumnFieldSpecified;
        
        private int codeSchemaProperty_EndLineField;
        
        private bool codeSchemaProperty_EndLineFieldSpecified;
        
        private int codeSchemaProperty_FrameDepthField;
        
        private bool codeSchemaProperty_FrameDepthFieldSpecified;
        
        private FrameKindEnum codeSchemaProperty_FrameKindField;
        
        private bool codeSchemaProperty_FrameKindFieldSpecified;
        
        private string codeSchemaProperty_IconField;
        
        private string codeSchemaProperty_InstanceTrackingInformationField;
        
        private ClrBoolean codeSchemaProperty_IsAbstractField;
        
        private bool codeSchemaProperty_IsAbstractFieldSpecified;
        
        private ClrBoolean codeSchemaProperty_IsAnonymousField;
        
        private bool codeSchemaProperty_IsAnonymousFieldSpecified;
        
        private ClrBoolean codeSchemaProperty_IsArrayField;
        
        private bool codeSchemaProperty_IsArrayFieldSpecified;
        
        private ClrBoolean codeSchemaProperty_IsByReferenceField;
        
        private bool codeSchemaProperty_IsByReferenceFieldSpecified;
        
        private ClrBoolean codeSchemaProperty_IsCallToThisField;
        
        private bool codeSchemaProperty_IsCallToThisFieldSpecified;
        
        private ClrBoolean codeSchemaProperty_IsConstructorField;
        
        private bool codeSchemaProperty_IsConstructorFieldSpecified;
        
        private ClrBoolean codeSchemaProperty_IsDoField;
        
        private bool codeSchemaProperty_IsDoFieldSpecified;
        
        private ClrBoolean codeSchemaProperty_IsFinalField;
        
        private bool codeSchemaProperty_IsFinalFieldSpecified;
        
        private ClrBoolean codeSchemaProperty_IsForField;
        
        private bool codeSchemaProperty_IsForFieldSpecified;
        
        private ClrBoolean codeSchemaProperty_IsForEachField;
        
        private bool codeSchemaProperty_IsForEachFieldSpecified;
        
        private ClrBoolean codeSchemaProperty_IsGenericField;
        
        private bool codeSchemaProperty_IsGenericFieldSpecified;
        
        private ClrBoolean codeSchemaProperty_IsGenericInstanceField;
        
        private bool codeSchemaProperty_IsGenericInstanceFieldSpecified;
        
        private ClrBoolean codeSchemaProperty_IsInternalField;
        
        private bool codeSchemaProperty_IsInternalFieldSpecified;
        
        private ClrBoolean codeSchemaProperty_IsHideBySignatureField;
        
        private bool codeSchemaProperty_IsHideBySignatureFieldSpecified;
        
        private ClrBoolean codeSchemaProperty_IsOperatorField;
        
        private bool codeSchemaProperty_IsOperatorFieldSpecified;
        
        private ClrBoolean codeSchemaProperty_IsOutField;
        
        private bool codeSchemaProperty_IsOutFieldSpecified;
        
        private ClrBoolean codeSchemaProperty_IsParameterArrayField;
        
        private bool codeSchemaProperty_IsParameterArrayFieldSpecified;
        
        private ClrBoolean codeSchemaProperty_IsPrivateField;
        
        private bool codeSchemaProperty_IsPrivateFieldSpecified;
        
        private ClrBoolean codeSchemaProperty_IsProtectedField;
        
        private bool codeSchemaProperty_IsProtectedFieldSpecified;
        
        private ClrBoolean codeSchemaProperty_IsProtectedOrInternalField;
        
        private bool codeSchemaProperty_IsProtectedOrInternalFieldSpecified;
        
        private ClrBoolean codeSchemaProperty_IsPropertyGetField;
        
        private bool codeSchemaProperty_IsPropertyGetFieldSpecified;
        
        private ClrBoolean codeSchemaProperty_IsPropertySetField;
        
        private bool codeSchemaProperty_IsPropertySetFieldSpecified;
        
        private ClrBoolean codeSchemaProperty_IsPrototypeField;
        
        private bool codeSchemaProperty_IsPrototypeFieldSpecified;
        
        private ClrBoolean codeSchemaProperty_IsPublicField;
        
        private bool codeSchemaProperty_IsPublicFieldSpecified;
        
        private ClrBoolean codeSchemaProperty_IsSpecialNameField;
        
        private bool codeSchemaProperty_IsSpecialNameFieldSpecified;
        
        private ClrBoolean codeSchemaProperty_IsStaticField;
        
        private bool codeSchemaProperty_IsStaticFieldSpecified;
        
        private ClrBoolean codeSchemaProperty_IsUntilLoopField;
        
        private bool codeSchemaProperty_IsUntilLoopFieldSpecified;
        
        private ClrBoolean codeSchemaProperty_IsVirtualField;
        
        private bool codeSchemaProperty_IsVirtualFieldSpecified;
        
        private ClrBoolean codeSchemaProperty_IsWhileField;
        
        private bool codeSchemaProperty_IsWhileFieldSpecified;
        
        private ClrBoolean codeSchemaProperty_PreserveDataField;
        
        private bool codeSchemaProperty_PreserveDataFieldSpecified;
        
        private ClrBoolean codeSchemaProperty_SingleInstanceSourceLinkField;
        
        private bool codeSchemaProperty_SingleInstanceSourceLinkFieldSpecified;
        
        private ClrBoolean codeSchemaProperty_SingleInstanceTargetLinkField;
        
        private bool codeSchemaProperty_SingleInstanceTargetLinkFieldSpecified;
        
        private string codeSchemaProperty_SourceTextField;
        
        private int codeSchemaProperty_StartColumnField;
        
        private bool codeSchemaProperty_StartColumnFieldSpecified;
        
        private int codeSchemaProperty_StartLineField;
        
        private bool codeSchemaProperty_StartLineFieldSpecified;
        
        private string codeSchemaProperty_StatementKindField;
        
        private int codeSchemaProperty_StatementNumberField;
        
        private bool codeSchemaProperty_StatementNumberFieldSpecified;
        
        private string codeSchemaProperty_StatementTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Category")]
        public DirectedGraphNodeCategory[] Category {
            get {
                return categoryField;
            }
            set {
                categoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Id {
            get {
                return idField;
            }
            set {
                idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("Category")]
        public string Category1 {
            get {
                return category1Field;
            }
            set {
                category1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Icon {
            get {
                return iconField;
            }
            set {
                iconField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Shape {
            get {
                return shapeField;
            }
            set {
                shapeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Style {
            get {
                return styleField;
            }
            set {
                styleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public HorizontalAlignmentEnum HorizontalAlignment {
            get {
                return horizontalAlignmentField;
            }
            set {
                horizontalAlignmentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HorizontalAlignmentSpecified {
            get {
                return horizontalAlignmentFieldSpecified;
            }
            set {
                horizontalAlignmentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public VerticalAlignmentEnum VerticalAlignment {
            get {
                return verticalAlignmentField;
            }
            set {
                verticalAlignmentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VerticalAlignmentSpecified {
            get {
                return verticalAlignmentFieldSpecified;
            }
            set {
                verticalAlignmentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double MinWidth {
            get {
                return minWidthField;
            }
            set {
                minWidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinWidthSpecified {
            get {
                return minWidthFieldSpecified;
            }
            set {
                minWidthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double MaxWidth {
            get {
                return maxWidthField;
            }
            set {
                maxWidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxWidthSpecified {
            get {
                return maxWidthFieldSpecified;
            }
            set {
                maxWidthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double NodeRadius {
            get {
                return nodeRadiusField;
            }
            set {
                nodeRadiusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NodeRadiusSpecified {
            get {
                return nodeRadiusFieldSpecified;
            }
            set {
                nodeRadiusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description {
            get {
                return descriptionField;
            }
            set {
                descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public GroupEnum Group {
            get {
                return groupField;
            }
            set {
                groupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GroupSpecified {
            get {
                return groupFieldSpecified;
            }
            set {
                groupFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean IsVertical {
            get {
                return isVerticalField;
            }
            set {
                isVerticalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsVerticalSpecified {
            get {
                return isVerticalFieldSpecified;
            }
            set {
                isVerticalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Reference {
            get {
                return referenceField;
            }
            set {
                referenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Label {
            get {
                return labelField;
            }
            set {
                labelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public VisibilityEnum Visibility {
            get {
                return visibilityField;
            }
            set {
                visibilityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VisibilitySpecified {
            get {
                return visibilityFieldSpecified;
            }
            set {
                visibilityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Background {
            get {
                return backgroundField;
            }
            set {
                backgroundField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double FontSize {
            get {
                return fontSizeField;
            }
            set {
                fontSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontSizeSpecified {
            get {
                return fontSizeFieldSpecified;
            }
            set {
                fontSizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FontFamily {
            get {
                return fontFamilyField;
            }
            set {
                fontFamilyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public FontStyleEnum FontStyle {
            get {
                return fontStyleField;
            }
            set {
                fontStyleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontStyleSpecified {
            get {
                return fontStyleFieldSpecified;
            }
            set {
                fontStyleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public FontWeightEnum FontWeight {
            get {
                return fontWeightField;
            }
            set {
                fontWeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontWeightSpecified {
            get {
                return fontWeightFieldSpecified;
            }
            set {
                fontWeightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Stroke {
            get {
                return strokeField;
            }
            set {
                strokeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string StrokeThickness {
            get {
                return strokeThicknessField;
            }
            set {
                strokeThicknessField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string StrokeDashArray {
            get {
                return strokeDashArrayField;
            }
            set {
                strokeDashArrayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Access {
            get {
                return accessField;
            }
            set {
                accessField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Assembly {
            get {
                return assemblyField;
            }
            set {
                assemblyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FilePath {
            get {
                return filePathField;
            }
            set {
                filePathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FunctionTypeFlags {
            get {
                return functionTypeFlagsField;
            }
            set {
                functionTypeFlagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean IsAbstract {
            get {
                return isAbstractField;
            }
            set {
                isAbstractField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsAbstractSpecified {
            get {
                return isAbstractFieldSpecified;
            }
            set {
                isAbstractFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean IsCodeType {
            get {
                return isCodeTypeField;
            }
            set {
                isCodeTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsCodeTypeSpecified {
            get {
                return isCodeTypeFieldSpecified;
            }
            set {
                isCodeTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean IsHub {
            get {
                return isHubField;
            }
            set {
                isHubField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsHubSpecified {
            get {
                return isHubFieldSpecified;
            }
            set {
                isHubFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean IsOverloaded {
            get {
                return isOverloadedField;
            }
            set {
                isOverloadedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsOverloadedSpecified {
            get {
                return isOverloadedFieldSpecified;
            }
            set {
                isOverloadedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean IsOverridable {
            get {
                return isOverridableField;
            }
            set {
                isOverridableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsOverridableSpecified {
            get {
                return isOverridableFieldSpecified;
            }
            set {
                isOverridableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Language {
            get {
                return languageField;
            }
            set {
                languageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Location {
            get {
                return locationField;
            }
            set {
                locationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int LinesOfCode {
            get {
                return linesOfCodeField;
            }
            set {
                linesOfCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LinesOfCodeSpecified {
            get {
                return linesOfCodeFieldSpecified;
            }
            set {
                linesOfCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Namespace {
            get {
                return namespaceField;
            }
            set {
                namespaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string MustImplement {
            get {
                return mustImplementField;
            }
            set {
                mustImplementField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TypeName {
            get {
                return typeNameField;
            }
            set {
                typeNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean IsDocumentation {
            get {
                return isDocumentationField;
            }
            set {
                isDocumentationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsDocumentationSpecified {
            get {
                return isDocumentationFieldSpecified;
            }
            set {
                isDocumentationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CodeGenSourceName {
            get {
                return codeGenSourceNameField;
            }
            set {
                codeGenSourceNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CodeGenTargetName {
            get {
                return codeGenTargetNameField;
            }
            set {
                codeGenTargetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean CodeGenIncoming {
            get {
                return codeGenIncomingField;
            }
            set {
                codeGenIncomingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeGenIncomingSpecified {
            get {
                return codeGenIncomingFieldSpecified;
            }
            set {
                codeGenIncomingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int CodeSchemaProperty_CallSequenceNumber {
            get {
                return codeSchemaProperty_CallSequenceNumberField;
            }
            set {
                codeSchemaProperty_CallSequenceNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_CallSequenceNumberSpecified {
            get {
                return codeSchemaProperty_CallSequenceNumberFieldSpecified;
            }
            set {
                codeSchemaProperty_CallSequenceNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean CodeSchemaProperty_DisableEnabledErrorHandler {
            get {
                return codeSchemaProperty_DisableEnabledErrorHandlerField;
            }
            set {
                codeSchemaProperty_DisableEnabledErrorHandlerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_DisableEnabledErrorHandlerSpecified {
            get {
                return codeSchemaProperty_DisableEnabledErrorHandlerFieldSpecified;
            }
            set {
                codeSchemaProperty_DisableEnabledErrorHandlerFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean CodeSchemaProperty_DisableEnabledException {
            get {
                return codeSchemaProperty_DisableEnabledExceptionField;
            }
            set {
                codeSchemaProperty_DisableEnabledExceptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_DisableEnabledExceptionSpecified {
            get {
                return codeSchemaProperty_DisableEnabledExceptionFieldSpecified;
            }
            set {
                codeSchemaProperty_DisableEnabledExceptionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int CodeSchemaProperty_EndColumn {
            get {
                return codeSchemaProperty_EndColumnField;
            }
            set {
                codeSchemaProperty_EndColumnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_EndColumnSpecified {
            get {
                return codeSchemaProperty_EndColumnFieldSpecified;
            }
            set {
                codeSchemaProperty_EndColumnFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int CodeSchemaProperty_EndLine {
            get {
                return codeSchemaProperty_EndLineField;
            }
            set {
                codeSchemaProperty_EndLineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_EndLineSpecified {
            get {
                return codeSchemaProperty_EndLineFieldSpecified;
            }
            set {
                codeSchemaProperty_EndLineFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int CodeSchemaProperty_FrameDepth {
            get {
                return codeSchemaProperty_FrameDepthField;
            }
            set {
                codeSchemaProperty_FrameDepthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_FrameDepthSpecified {
            get {
                return codeSchemaProperty_FrameDepthFieldSpecified;
            }
            set {
                codeSchemaProperty_FrameDepthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public FrameKindEnum CodeSchemaProperty_FrameKind {
            get {
                return codeSchemaProperty_FrameKindField;
            }
            set {
                codeSchemaProperty_FrameKindField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_FrameKindSpecified {
            get {
                return codeSchemaProperty_FrameKindFieldSpecified;
            }
            set {
                codeSchemaProperty_FrameKindFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CodeSchemaProperty_Icon {
            get {
                return codeSchemaProperty_IconField;
            }
            set {
                codeSchemaProperty_IconField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CodeSchemaProperty_InstanceTrackingInformation {
            get {
                return codeSchemaProperty_InstanceTrackingInformationField;
            }
            set {
                codeSchemaProperty_InstanceTrackingInformationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean CodeSchemaProperty_IsAbstract {
            get {
                return codeSchemaProperty_IsAbstractField;
            }
            set {
                codeSchemaProperty_IsAbstractField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_IsAbstractSpecified {
            get {
                return codeSchemaProperty_IsAbstractFieldSpecified;
            }
            set {
                codeSchemaProperty_IsAbstractFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean CodeSchemaProperty_IsAnonymous {
            get {
                return codeSchemaProperty_IsAnonymousField;
            }
            set {
                codeSchemaProperty_IsAnonymousField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_IsAnonymousSpecified {
            get {
                return codeSchemaProperty_IsAnonymousFieldSpecified;
            }
            set {
                codeSchemaProperty_IsAnonymousFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean CodeSchemaProperty_IsArray {
            get {
                return codeSchemaProperty_IsArrayField;
            }
            set {
                codeSchemaProperty_IsArrayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_IsArraySpecified {
            get {
                return codeSchemaProperty_IsArrayFieldSpecified;
            }
            set {
                codeSchemaProperty_IsArrayFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean CodeSchemaProperty_IsByReference {
            get {
                return codeSchemaProperty_IsByReferenceField;
            }
            set {
                codeSchemaProperty_IsByReferenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_IsByReferenceSpecified {
            get {
                return codeSchemaProperty_IsByReferenceFieldSpecified;
            }
            set {
                codeSchemaProperty_IsByReferenceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean CodeSchemaProperty_IsCallToThis {
            get {
                return codeSchemaProperty_IsCallToThisField;
            }
            set {
                codeSchemaProperty_IsCallToThisField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_IsCallToThisSpecified {
            get {
                return codeSchemaProperty_IsCallToThisFieldSpecified;
            }
            set {
                codeSchemaProperty_IsCallToThisFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean CodeSchemaProperty_IsConstructor {
            get {
                return codeSchemaProperty_IsConstructorField;
            }
            set {
                codeSchemaProperty_IsConstructorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_IsConstructorSpecified {
            get {
                return codeSchemaProperty_IsConstructorFieldSpecified;
            }
            set {
                codeSchemaProperty_IsConstructorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean CodeSchemaProperty_IsDo {
            get {
                return codeSchemaProperty_IsDoField;
            }
            set {
                codeSchemaProperty_IsDoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_IsDoSpecified {
            get {
                return codeSchemaProperty_IsDoFieldSpecified;
            }
            set {
                codeSchemaProperty_IsDoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean CodeSchemaProperty_IsFinal {
            get {
                return codeSchemaProperty_IsFinalField;
            }
            set {
                codeSchemaProperty_IsFinalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_IsFinalSpecified {
            get {
                return codeSchemaProperty_IsFinalFieldSpecified;
            }
            set {
                codeSchemaProperty_IsFinalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean CodeSchemaProperty_IsFor {
            get {
                return codeSchemaProperty_IsForField;
            }
            set {
                codeSchemaProperty_IsForField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_IsForSpecified {
            get {
                return codeSchemaProperty_IsForFieldSpecified;
            }
            set {
                codeSchemaProperty_IsForFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean CodeSchemaProperty_IsForEach {
            get {
                return codeSchemaProperty_IsForEachField;
            }
            set {
                codeSchemaProperty_IsForEachField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_IsForEachSpecified {
            get {
                return codeSchemaProperty_IsForEachFieldSpecified;
            }
            set {
                codeSchemaProperty_IsForEachFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean CodeSchemaProperty_IsGeneric {
            get {
                return codeSchemaProperty_IsGenericField;
            }
            set {
                codeSchemaProperty_IsGenericField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_IsGenericSpecified {
            get {
                return codeSchemaProperty_IsGenericFieldSpecified;
            }
            set {
                codeSchemaProperty_IsGenericFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean CodeSchemaProperty_IsGenericInstance {
            get {
                return codeSchemaProperty_IsGenericInstanceField;
            }
            set {
                codeSchemaProperty_IsGenericInstanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_IsGenericInstanceSpecified {
            get {
                return codeSchemaProperty_IsGenericInstanceFieldSpecified;
            }
            set {
                codeSchemaProperty_IsGenericInstanceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean CodeSchemaProperty_IsInternal {
            get {
                return codeSchemaProperty_IsInternalField;
            }
            set {
                codeSchemaProperty_IsInternalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_IsInternalSpecified {
            get {
                return codeSchemaProperty_IsInternalFieldSpecified;
            }
            set {
                codeSchemaProperty_IsInternalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean CodeSchemaProperty_IsHideBySignature {
            get {
                return codeSchemaProperty_IsHideBySignatureField;
            }
            set {
                codeSchemaProperty_IsHideBySignatureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_IsHideBySignatureSpecified {
            get {
                return codeSchemaProperty_IsHideBySignatureFieldSpecified;
            }
            set {
                codeSchemaProperty_IsHideBySignatureFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean CodeSchemaProperty_IsOperator {
            get {
                return codeSchemaProperty_IsOperatorField;
            }
            set {
                codeSchemaProperty_IsOperatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_IsOperatorSpecified {
            get {
                return codeSchemaProperty_IsOperatorFieldSpecified;
            }
            set {
                codeSchemaProperty_IsOperatorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean CodeSchemaProperty_IsOut {
            get {
                return codeSchemaProperty_IsOutField;
            }
            set {
                codeSchemaProperty_IsOutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_IsOutSpecified {
            get {
                return codeSchemaProperty_IsOutFieldSpecified;
            }
            set {
                codeSchemaProperty_IsOutFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean CodeSchemaProperty_IsParameterArray {
            get {
                return codeSchemaProperty_IsParameterArrayField;
            }
            set {
                codeSchemaProperty_IsParameterArrayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_IsParameterArraySpecified {
            get {
                return codeSchemaProperty_IsParameterArrayFieldSpecified;
            }
            set {
                codeSchemaProperty_IsParameterArrayFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean CodeSchemaProperty_IsPrivate {
            get {
                return codeSchemaProperty_IsPrivateField;
            }
            set {
                codeSchemaProperty_IsPrivateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_IsPrivateSpecified {
            get {
                return codeSchemaProperty_IsPrivateFieldSpecified;
            }
            set {
                codeSchemaProperty_IsPrivateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean CodeSchemaProperty_IsProtected {
            get {
                return codeSchemaProperty_IsProtectedField;
            }
            set {
                codeSchemaProperty_IsProtectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_IsProtectedSpecified {
            get {
                return codeSchemaProperty_IsProtectedFieldSpecified;
            }
            set {
                codeSchemaProperty_IsProtectedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean CodeSchemaProperty_IsProtectedOrInternal {
            get {
                return codeSchemaProperty_IsProtectedOrInternalField;
            }
            set {
                codeSchemaProperty_IsProtectedOrInternalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_IsProtectedOrInternalSpecified {
            get {
                return codeSchemaProperty_IsProtectedOrInternalFieldSpecified;
            }
            set {
                codeSchemaProperty_IsProtectedOrInternalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean CodeSchemaProperty_IsPropertyGet {
            get {
                return codeSchemaProperty_IsPropertyGetField;
            }
            set {
                codeSchemaProperty_IsPropertyGetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_IsPropertyGetSpecified {
            get {
                return codeSchemaProperty_IsPropertyGetFieldSpecified;
            }
            set {
                codeSchemaProperty_IsPropertyGetFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean CodeSchemaProperty_IsPropertySet {
            get {
                return codeSchemaProperty_IsPropertySetField;
            }
            set {
                codeSchemaProperty_IsPropertySetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_IsPropertySetSpecified {
            get {
                return codeSchemaProperty_IsPropertySetFieldSpecified;
            }
            set {
                codeSchemaProperty_IsPropertySetFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean CodeSchemaProperty_IsPrototype {
            get {
                return codeSchemaProperty_IsPrototypeField;
            }
            set {
                codeSchemaProperty_IsPrototypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_IsPrototypeSpecified {
            get {
                return codeSchemaProperty_IsPrototypeFieldSpecified;
            }
            set {
                codeSchemaProperty_IsPrototypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean CodeSchemaProperty_IsPublic {
            get {
                return codeSchemaProperty_IsPublicField;
            }
            set {
                codeSchemaProperty_IsPublicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_IsPublicSpecified {
            get {
                return codeSchemaProperty_IsPublicFieldSpecified;
            }
            set {
                codeSchemaProperty_IsPublicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean CodeSchemaProperty_IsSpecialName {
            get {
                return codeSchemaProperty_IsSpecialNameField;
            }
            set {
                codeSchemaProperty_IsSpecialNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_IsSpecialNameSpecified {
            get {
                return codeSchemaProperty_IsSpecialNameFieldSpecified;
            }
            set {
                codeSchemaProperty_IsSpecialNameFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean CodeSchemaProperty_IsStatic {
            get {
                return codeSchemaProperty_IsStaticField;
            }
            set {
                codeSchemaProperty_IsStaticField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_IsStaticSpecified {
            get {
                return codeSchemaProperty_IsStaticFieldSpecified;
            }
            set {
                codeSchemaProperty_IsStaticFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean CodeSchemaProperty_IsUntilLoop {
            get {
                return codeSchemaProperty_IsUntilLoopField;
            }
            set {
                codeSchemaProperty_IsUntilLoopField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_IsUntilLoopSpecified {
            get {
                return codeSchemaProperty_IsUntilLoopFieldSpecified;
            }
            set {
                codeSchemaProperty_IsUntilLoopFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean CodeSchemaProperty_IsVirtual {
            get {
                return codeSchemaProperty_IsVirtualField;
            }
            set {
                codeSchemaProperty_IsVirtualField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_IsVirtualSpecified {
            get {
                return codeSchemaProperty_IsVirtualFieldSpecified;
            }
            set {
                codeSchemaProperty_IsVirtualFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean CodeSchemaProperty_IsWhile {
            get {
                return codeSchemaProperty_IsWhileField;
            }
            set {
                codeSchemaProperty_IsWhileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_IsWhileSpecified {
            get {
                return codeSchemaProperty_IsWhileFieldSpecified;
            }
            set {
                codeSchemaProperty_IsWhileFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean CodeSchemaProperty_PreserveData {
            get {
                return codeSchemaProperty_PreserveDataField;
            }
            set {
                codeSchemaProperty_PreserveDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_PreserveDataSpecified {
            get {
                return codeSchemaProperty_PreserveDataFieldSpecified;
            }
            set {
                codeSchemaProperty_PreserveDataFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean CodeSchemaProperty_SingleInstanceSourceLink {
            get {
                return codeSchemaProperty_SingleInstanceSourceLinkField;
            }
            set {
                codeSchemaProperty_SingleInstanceSourceLinkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_SingleInstanceSourceLinkSpecified {
            get {
                return codeSchemaProperty_SingleInstanceSourceLinkFieldSpecified;
            }
            set {
                codeSchemaProperty_SingleInstanceSourceLinkFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean CodeSchemaProperty_SingleInstanceTargetLink {
            get {
                return codeSchemaProperty_SingleInstanceTargetLinkField;
            }
            set {
                codeSchemaProperty_SingleInstanceTargetLinkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_SingleInstanceTargetLinkSpecified {
            get {
                return codeSchemaProperty_SingleInstanceTargetLinkFieldSpecified;
            }
            set {
                codeSchemaProperty_SingleInstanceTargetLinkFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CodeSchemaProperty_SourceText {
            get {
                return codeSchemaProperty_SourceTextField;
            }
            set {
                codeSchemaProperty_SourceTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int CodeSchemaProperty_StartColumn {
            get {
                return codeSchemaProperty_StartColumnField;
            }
            set {
                codeSchemaProperty_StartColumnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_StartColumnSpecified {
            get {
                return codeSchemaProperty_StartColumnFieldSpecified;
            }
            set {
                codeSchemaProperty_StartColumnFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int CodeSchemaProperty_StartLine {
            get {
                return codeSchemaProperty_StartLineField;
            }
            set {
                codeSchemaProperty_StartLineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_StartLineSpecified {
            get {
                return codeSchemaProperty_StartLineFieldSpecified;
            }
            set {
                codeSchemaProperty_StartLineFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CodeSchemaProperty_StatementKind {
            get {
                return codeSchemaProperty_StatementKindField;
            }
            set {
                codeSchemaProperty_StatementKindField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int CodeSchemaProperty_StatementNumber {
            get {
                return codeSchemaProperty_StatementNumberField;
            }
            set {
                codeSchemaProperty_StatementNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSchemaProperty_StatementNumberSpecified {
            get {
                return codeSchemaProperty_StatementNumberFieldSpecified;
            }
            set {
                codeSchemaProperty_StatementNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CodeSchemaProperty_StatementType {
            get {
                return codeSchemaProperty_StatementTypeField;
            }
            set {
                codeSchemaProperty_StatementTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/vs/2009/dgml")]
    public partial class DirectedGraphNodeCategory {
        
        private string refField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Ref {
            get {
                return refField;
            }
            set {
                refField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/vs/2009/dgml")]
    public enum HorizontalAlignmentEnum {
        
        /// <remarks/>
        Left,
        
        /// <remarks/>
        Center,
        
        /// <remarks/>
        Right,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/vs/2009/dgml")]
    public enum VerticalAlignmentEnum {
        
        /// <remarks/>
        Top,
        
        /// <remarks/>
        Center,
        
        /// <remarks/>
        Bottom,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/vs/2009/dgml")]
    public enum GroupEnum {
        
        /// <remarks/>
        Expanded,
        
        /// <remarks/>
        Collapsed,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/vs/2009/dgml")]
    public enum ClrBoolean {
        
        /// <remarks/>
        True,
        
        /// <remarks/>
        False,
        
        /// <remarks/>
        @true,
        
        /// <remarks/>
        @false,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/vs/2009/dgml")]
    public enum VisibilityEnum {
        
        /// <remarks/>
        Visible,
        
        /// <remarks/>
        Hidden,
        
        /// <remarks/>
        Collapsed,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/vs/2009/dgml")]
    public enum FontStyleEnum {
        
        /// <remarks/>
        Normal,
        
        /// <remarks/>
        Italic,
        
        /// <remarks/>
        Oblique,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/vs/2009/dgml")]
    public enum FontWeightEnum {
        
        /// <remarks/>
        Black,
        
        /// <remarks/>
        Bold,
        
        /// <remarks/>
        DemiBold,
        
        /// <remarks/>
        ExtraBlack,
        
        /// <remarks/>
        ExtraBold,
        
        /// <remarks/>
        ExtraLight,
        
        /// <remarks/>
        Heavy,
        
        /// <remarks/>
        Light,
        
        /// <remarks/>
        Medium,
        
        /// <remarks/>
        Normal,
        
        /// <remarks/>
        Regular,
        
        /// <remarks/>
        Semibold,
        
        /// <remarks/>
        Thin,
        
        /// <remarks/>
        UltraBlack,
        
        /// <remarks/>
        UltraBold,
        
        /// <remarks/>
        UltraLight,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/vs/2009/dgml")]
    public enum FrameKindEnum {
        
        /// <remarks/>
        Conditional,
        
        /// <remarks/>
        Clause,
        
        /// <remarks/>
        Loop,
        
        /// <remarks/>
        Call,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/vs/2009/dgml")]
    public partial class DirectedGraphLink {
        
        private DirectedGraphLinkCategory[] categoryField;
        
        private string labelField;
        
        private VisibilityEnum visibilityField;
        
        private bool visibilityFieldSpecified;
        
        private string backgroundField;
        
        private double fontSizeField;
        
        private bool fontSizeFieldSpecified;
        
        private string fontFamilyField;
        
        private FontStyleEnum fontStyleField;
        
        private bool fontStyleFieldSpecified;
        
        private FontWeightEnum fontWeightField;
        
        private bool fontWeightFieldSpecified;
        
        private string strokeField;
        
        private string strokeThicknessField;
        
        private string strokeDashArrayField;
        
        private string sourceField;
        
        private string targetField;
        
        private string category1Field;
        
        private ClrBoolean seederField;
        
        private bool seederFieldSpecified;
        
        private ClrBoolean attractConsumersField;
        
        private bool attractConsumersFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Category")]
        public DirectedGraphLinkCategory[] Category {
            get {
                return categoryField;
            }
            set {
                categoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Label {
            get {
                return labelField;
            }
            set {
                labelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public VisibilityEnum Visibility {
            get {
                return visibilityField;
            }
            set {
                visibilityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VisibilitySpecified {
            get {
                return visibilityFieldSpecified;
            }
            set {
                visibilityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Background {
            get {
                return backgroundField;
            }
            set {
                backgroundField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double FontSize {
            get {
                return fontSizeField;
            }
            set {
                fontSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontSizeSpecified {
            get {
                return fontSizeFieldSpecified;
            }
            set {
                fontSizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FontFamily {
            get {
                return fontFamilyField;
            }
            set {
                fontFamilyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public FontStyleEnum FontStyle {
            get {
                return fontStyleField;
            }
            set {
                fontStyleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontStyleSpecified {
            get {
                return fontStyleFieldSpecified;
            }
            set {
                fontStyleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public FontWeightEnum FontWeight {
            get {
                return fontWeightField;
            }
            set {
                fontWeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontWeightSpecified {
            get {
                return fontWeightFieldSpecified;
            }
            set {
                fontWeightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Stroke {
            get {
                return strokeField;
            }
            set {
                strokeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string StrokeThickness {
            get {
                return strokeThicknessField;
            }
            set {
                strokeThicknessField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string StrokeDashArray {
            get {
                return strokeDashArrayField;
            }
            set {
                strokeDashArrayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Source {
            get {
                return sourceField;
            }
            set {
                sourceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Target {
            get {
                return targetField;
            }
            set {
                targetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("Category")]
        public string Category1 {
            get {
                return category1Field;
            }
            set {
                category1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean Seeder {
            get {
                return seederField;
            }
            set {
                seederField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SeederSpecified {
            get {
                return seederFieldSpecified;
            }
            set {
                seederFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean AttractConsumers {
            get {
                return attractConsumersField;
            }
            set {
                attractConsumersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AttractConsumersSpecified {
            get {
                return attractConsumersFieldSpecified;
            }
            set {
                attractConsumersFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/vs/2009/dgml")]
    public partial class DirectedGraphLinkCategory {
        
        private string refField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Ref {
            get {
                return refField;
            }
            set {
                refField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/vs/2009/dgml")]
    public partial class DirectedGraphCategory {
        
        private string idField;
        
        private string basedOnField;
        
        private string labelField;
        
        private VisibilityEnum visibilityField;
        
        private bool visibilityFieldSpecified;
        
        private string backgroundField;
        
        private double fontSizeField;
        
        private bool fontSizeFieldSpecified;
        
        private string fontFamilyField;
        
        private FontStyleEnum fontStyleField;
        
        private bool fontStyleFieldSpecified;
        
        private FontWeightEnum fontWeightField;
        
        private bool fontWeightFieldSpecified;
        
        private string strokeField;
        
        private string strokeThicknessField;
        
        private string strokeDashArrayField;
        
        private string iconField;
        
        private string shapeField;
        
        private string styleField;
        
        private HorizontalAlignmentEnum horizontalAlignmentField;
        
        private bool horizontalAlignmentFieldSpecified;
        
        private VerticalAlignmentEnum verticalAlignmentField;
        
        private bool verticalAlignmentFieldSpecified;
        
        private double minWidthField;
        
        private bool minWidthFieldSpecified;
        
        private double maxWidthField;
        
        private bool maxWidthFieldSpecified;
        
        private double nodeRadiusField;
        
        private bool nodeRadiusFieldSpecified;
        
        private string canLinkedNodesBeDataDrivenField;
        
        private string canBeDataDrivenField;
        
        private string defaultActionField;
        
        private string incomingActionLabelField;
        
        private ClrBoolean isProviderRootField;
        
        private bool isProviderRootFieldSpecified;
        
        private ClrBoolean isContainmentField;
        
        private bool isContainmentFieldSpecified;
        
        private ClrBoolean isTagField;
        
        private bool isTagFieldSpecified;
        
        private string navigationActionLabelField;
        
        private string outgoingActionLabelField;
        
        private string sourceCategoryField;
        
        private string targetCategoryField;
        
        private string detailsField;
        
        private string inboundNameField;
        
        private string outboundNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Id {
            get {
                return idField;
            }
            set {
                idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string BasedOn {
            get {
                return basedOnField;
            }
            set {
                basedOnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Label {
            get {
                return labelField;
            }
            set {
                labelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public VisibilityEnum Visibility {
            get {
                return visibilityField;
            }
            set {
                visibilityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VisibilitySpecified {
            get {
                return visibilityFieldSpecified;
            }
            set {
                visibilityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Background {
            get {
                return backgroundField;
            }
            set {
                backgroundField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double FontSize {
            get {
                return fontSizeField;
            }
            set {
                fontSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontSizeSpecified {
            get {
                return fontSizeFieldSpecified;
            }
            set {
                fontSizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FontFamily {
            get {
                return fontFamilyField;
            }
            set {
                fontFamilyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public FontStyleEnum FontStyle {
            get {
                return fontStyleField;
            }
            set {
                fontStyleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontStyleSpecified {
            get {
                return fontStyleFieldSpecified;
            }
            set {
                fontStyleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public FontWeightEnum FontWeight {
            get {
                return fontWeightField;
            }
            set {
                fontWeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontWeightSpecified {
            get {
                return fontWeightFieldSpecified;
            }
            set {
                fontWeightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Stroke {
            get {
                return strokeField;
            }
            set {
                strokeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string StrokeThickness {
            get {
                return strokeThicknessField;
            }
            set {
                strokeThicknessField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string StrokeDashArray {
            get {
                return strokeDashArrayField;
            }
            set {
                strokeDashArrayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Icon {
            get {
                return iconField;
            }
            set {
                iconField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Shape {
            get {
                return shapeField;
            }
            set {
                shapeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Style {
            get {
                return styleField;
            }
            set {
                styleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public HorizontalAlignmentEnum HorizontalAlignment {
            get {
                return horizontalAlignmentField;
            }
            set {
                horizontalAlignmentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HorizontalAlignmentSpecified {
            get {
                return horizontalAlignmentFieldSpecified;
            }
            set {
                horizontalAlignmentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public VerticalAlignmentEnum VerticalAlignment {
            get {
                return verticalAlignmentField;
            }
            set {
                verticalAlignmentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VerticalAlignmentSpecified {
            get {
                return verticalAlignmentFieldSpecified;
            }
            set {
                verticalAlignmentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double MinWidth {
            get {
                return minWidthField;
            }
            set {
                minWidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinWidthSpecified {
            get {
                return minWidthFieldSpecified;
            }
            set {
                minWidthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double MaxWidth {
            get {
                return maxWidthField;
            }
            set {
                maxWidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxWidthSpecified {
            get {
                return maxWidthFieldSpecified;
            }
            set {
                maxWidthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double NodeRadius {
            get {
                return nodeRadiusField;
            }
            set {
                nodeRadiusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NodeRadiusSpecified {
            get {
                return nodeRadiusFieldSpecified;
            }
            set {
                nodeRadiusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CanLinkedNodesBeDataDriven {
            get {
                return canLinkedNodesBeDataDrivenField;
            }
            set {
                canLinkedNodesBeDataDrivenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CanBeDataDriven {
            get {
                return canBeDataDrivenField;
            }
            set {
                canBeDataDrivenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DefaultAction {
            get {
                return defaultActionField;
            }
            set {
                defaultActionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string IncomingActionLabel {
            get {
                return incomingActionLabelField;
            }
            set {
                incomingActionLabelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean IsProviderRoot {
            get {
                return isProviderRootField;
            }
            set {
                isProviderRootField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsProviderRootSpecified {
            get {
                return isProviderRootFieldSpecified;
            }
            set {
                isProviderRootFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean IsContainment {
            get {
                return isContainmentField;
            }
            set {
                isContainmentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsContainmentSpecified {
            get {
                return isContainmentFieldSpecified;
            }
            set {
                isContainmentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean IsTag {
            get {
                return isTagField;
            }
            set {
                isTagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsTagSpecified {
            get {
                return isTagFieldSpecified;
            }
            set {
                isTagFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string NavigationActionLabel {
            get {
                return navigationActionLabelField;
            }
            set {
                navigationActionLabelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string OutgoingActionLabel {
            get {
                return outgoingActionLabelField;
            }
            set {
                outgoingActionLabelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SourceCategory {
            get {
                return sourceCategoryField;
            }
            set {
                sourceCategoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TargetCategory {
            get {
                return targetCategoryField;
            }
            set {
                targetCategoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Details {
            get {
                return detailsField;
            }
            set {
                detailsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string InboundName {
            get {
                return inboundNameField;
            }
            set {
                inboundNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string OutboundName {
            get {
                return outboundNameField;
            }
            set {
                outboundNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/vs/2009/dgml")]
    public partial class DirectedGraphProperty {
        
        private string idField;
        
        private ClrBoolean isReferenceField;
        
        private bool isReferenceFieldSpecified;
        
        private string labelField;
        
        private string dataTypeField;
        
        private string descriptionField;
        
        private string groupField;
        
        private string referenceTemplateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Id {
            get {
                return idField;
            }
            set {
                idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean IsReference {
            get {
                return isReferenceField;
            }
            set {
                isReferenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsReferenceSpecified {
            get {
                return isReferenceFieldSpecified;
            }
            set {
                isReferenceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Label {
            get {
                return labelField;
            }
            set {
                labelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DataType {
            get {
                return dataTypeField;
            }
            set {
                dataTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description {
            get {
                return descriptionField;
            }
            set {
                descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Group {
            get {
                return groupField;
            }
            set {
                groupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ReferenceTemplate {
            get {
                return referenceTemplateField;
            }
            set {
                referenceTemplateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/vs/2009/dgml")]
    public partial class DirectedGraphName {
        
        private string idField;
        
        private string labelField;
        
        private string valueTypeField;
        
        private string formatterField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Id {
            get {
                return idField;
            }
            set {
                idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Label {
            get {
                return labelField;
            }
            set {
                labelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ValueType {
            get {
                return valueTypeField;
            }
            set {
                valueTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Formatter {
            get {
                return formatterField;
            }
            set {
                formatterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/vs/2009/dgml")]
    public partial class DirectedGraphAlias {
        
        private byte nField;
        
        private string uriField;
        
        private string idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte n {
            get {
                return nField;
            }
            set {
                nField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Uri {
            get {
                return uriField;
            }
            set {
                uriField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Id {
            get {
                return idField;
            }
            set {
                idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/vs/2009/dgml")]
    public partial class DirectedGraphStyle {
        
        private DirectedGraphStyleCondition conditionField;
        
        private DirectedGraphStyleSetter[] setterField;
        
        private TargetTypeEnum targetTypeField;
        
        private ClrBoolean isEnabledField;
        
        private bool isEnabledFieldSpecified;
        
        private string groupLabelField;
        
        private string valueLabelField;
        
        private string toolTipField;
        
        /// <remarks/>
        public DirectedGraphStyleCondition Condition {
            get {
                return conditionField;
            }
            set {
                conditionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Setter")]
        public DirectedGraphStyleSetter[] Setter {
            get {
                return setterField;
            }
            set {
                setterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public TargetTypeEnum TargetType {
            get {
                return targetTypeField;
            }
            set {
                targetTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ClrBoolean IsEnabled {
            get {
                return isEnabledField;
            }
            set {
                isEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsEnabledSpecified {
            get {
                return isEnabledFieldSpecified;
            }
            set {
                isEnabledFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string GroupLabel {
            get {
                return groupLabelField;
            }
            set {
                groupLabelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ValueLabel {
            get {
                return valueLabelField;
            }
            set {
                valueLabelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ToolTip {
            get {
                return toolTipField;
            }
            set {
                toolTipField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/vs/2009/dgml")]
    public partial class DirectedGraphStyleCondition {
        
        private string expressionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Expression {
            get {
                return expressionField;
            }
            set {
                expressionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/vs/2009/dgml")]
    public partial class DirectedGraphStyleSetter {
        
        private PropertyType propertyField;
        
        private string valueField;
        
        private string expressionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public PropertyType Property {
            get {
                return propertyField;
            }
            set {
                propertyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Value {
            get {
                return valueField;
            }
            set {
                valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Expression {
            get {
                return expressionField;
            }
            set {
                expressionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/vs/2009/dgml")]
    public enum PropertyType {
        
        /// <remarks/>
        ArrowHeadSize,
        
        /// <remarks/>
        ArrowHeadWidth,
        
        /// <remarks/>
        Background,
        
        /// <remarks/>
        FontFamily,
        
        /// <remarks/>
        FontSize,
        
        /// <remarks/>
        FontStyle,
        
        /// <remarks/>
        FontWeight,
        
        /// <remarks/>
        Foreground,
        
        /// <remarks/>
        HorizontalAlignment,
        
        /// <remarks/>
        Icon,
        
        /// <remarks/>
        Image,
        
        /// <remarks/>
        MinWidth,
        
        /// <remarks/>
        MaxWidth,
        
        /// <remarks/>
        NodeRadius,
        
        /// <remarks/>
        SelectedStroke,
        
        /// <remarks/>
        ShadowDepth,
        
        /// <remarks/>
        Shape,
        
        /// <remarks/>
        Stroke,
        
        /// <remarks/>
        StrokeDashArray,
        
        /// <remarks/>
        StrokeThickness,
        
        /// <remarks/>
        Style,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/vs/2009/dgml")]
    public enum TargetTypeEnum {
        
        /// <remarks/>
        Node,
        
        /// <remarks/>
        Link,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/vs/2009/dgml")]
    public partial class DirectedGraphPath {
        
        private string idField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Id {
            get {
                return idField;
            }
            set {
                idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Value {
            get {
                return valueField;
            }
            set {
                valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/vs/2009/dgml")]
    public enum GraphDirectionEnum {
        
        /// <remarks/>
        TopToBottom,
        
        /// <remarks/>
        BottomToTop,
        
        /// <remarks/>
        LeftToRight,
        
        /// <remarks/>
        RightToLeft,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/vs/2009/dgml")]
    public enum LayoutEnum {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Sugiyama,
        
        /// <remarks/>
        ForceDirected,
        
        /// <remarks/>
        DependencyMatrix,
    }
}
